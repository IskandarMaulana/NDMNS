@using System.Text.RegularExpressions
@{
    ViewData["Title"] = "Master Data Message";
    ViewData["Breadcrumb"] = "<li class='breadcrumb-item'><a href='#'>Home</a></li><li class='breadcrumb-item'><a href='#'>Master Data</a></li><li class='breadcrumb-item active'>Message</li>";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="clearfix"></div>

<div class="col-sm-12">
    
    <div class="mb-3">
        <a href="javascript:void(0)" class="btn btn-secondary btn-sm" onclick="reset()">
            <i class="bi bi-arrow-clockwise"></i> Reset
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="table-responsive">
        <table id="datatable-fixed-header" class="table table-striped table-bordered datatable-fixed-header" style="width:100%">
            <thead class="table-light">
                <tr>
                    <th style="text-align: center;">No.</th>
                    <th style="text-align: center;">Date</th>
                    <th style="text-align: center;">Downtime</th>
                    <th style="text-align: center;">Ticket Number</th>
                    <th style="text-align: center;">Recipient</th>
                    <th style="text-align: center;">Text</th>
                    <th style="text-align: center;">Image</th>
                    <th style="text-align: center;">Type</th>
                    <th style="text-align: center;">Category</th>
                    <th style="text-align: center;">Status</th>
                </tr>
                <tr>
                    <th></th>
                    <th>
                        <input type="date" class="form-control form-control-sm" id="date_filter"
                                onchange="search()">
                    </th>
                    <th>
                        <input type="text" class="form-control form-control-sm name-input" id="downtime_filter"
                                onkeypress="handleKeyPress(event)">
                    </th>
                    <th>
                        <input type="text" class="form-control form-control-sm name-input" id="ticketnumber_filter"
                                onkeypress="handleKeyPress(event)">
                    </th>
                    <th>
                        <input type="text" class="form-control form-control-sm name-input" id="receiver_filter"
                                onkeypress="handleKeyPress(event)">
                    </th>
                    <th>
                        <input type="text" class="form-control form-control-sm name-input" id="text_filter"
                                onkeypress="handleKeyPress(event)">
                    </th>
                    <th>
                        <select class="form-select form-select-sm" id="image_filter" onchange="search()">
                            <option value="">All</option>
                            <option value="with_image">With Image</option>
                            <option value="without_image">Without Image</option>
                        </select>
                    </th>
                    <th>
                        <select class="form-select form-select-sm" id="type_filter" onchange="search()">
                            <option value="">All</option>
                            <option value="1">Downtime</option>
                            <option value="2">Uptime</option>
                            <option value="3">Intermittent</option>
                        </select>
                    </th>
                    <th>
                        <select class="form-select form-select-sm" id="category_filter" onchange="search()">
                            <option value="">All</option>
                            <option value="1">Alert</option>
                            <option value="2">Response</option>
                            <option value="3">Update</option>
                        </select>
                    </th>
                    <th>
                        <select class="form-select form-select-sm" id="status_filter" onchange="search()">
                            <option value="">All</option>
                            <option value="1">Sent</option>
                            <option value="2">Responded</option>
                            <option value="3">Failed</option>
                        </select>
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    int no = 1;
                }
                @if (Model != null)
                {
                    @foreach (var row in Model)
                    {
                        <tr>
                            <td>@(no++)</td>
                            <td data-order='@row.Date.ToString("yyyy-MM-ddTHH:mm:ss")'>@row.Date.ToString("dd/MM/yyyy HH:mm WIB")</td>
                            <td>@row.DowntimeDescription</td>
                            <td>@row.DowntimeTicketNumber</td>
                            <td>@row.RecipientName</td>
                            <td>
                                @if (!string.IsNullOrEmpty(row.Text))
                                {
                                    @Html.Raw(Regex.Replace(row.Text, @"\*(.*?)\*", "<strong>$1</strong>"))
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>
                            <td style="text-align: center; vertical-align: middle;" data-image="@row.Image">
                                @if (!string.IsNullOrEmpty(row.Image))
                                {
                                    <img src="@row.Image" 
                                            alt="Message Image" 
                                            class="img-thumbnail" 
                                            style="max-width: 80px; max-height: 80px; cursor: pointer;"
                                            onclick="showImageModal('@Html.Raw(Html.Encode(row.Image))')"
                                            data-bs-toggle="tooltip"
                                            data-bs-placement="top"
                                            title="Click to view full image">
                                }
                                else
                                {
                                    <span class="text-muted">
                                        <i class="bi bi-image" style="font-size: 1.2em;"></i>
                                    </span>
                                }
                            </td>
                            <td style="text-align: center;" data-type="@row.Type">
                                @switch (row.Type)
                                {
                                    case 1:
                                        <span class="badge bg-danger">Downtime</span>
                                        break;
                                    case 2:
                                        <span class="badge bg-success">Uptime</span>
                                        break;
                                    case 3:
                                        <span class="badge bg-warning">Intermittent</span>
                                        break;
                                    default:
                                        <span class="badge bg-light text-dark">Unknown</span>
                                        break;
                                }
                            </td>
                            <td style="text-align: center;" data-category="@row.Category">
                                @switch (row.Category)
                                {
                                    case 1:
                                        <span class="badge bg-info">Alert</span>
                                        break;
                                    case 2:
                                        <span class="badge bg-success">Response</span>
                                        break;
                                    case 3:
                                        <span class="badge bg-warning">Update</span>
                                        break;
                                    default:
                                        <span class="badge bg-light text-dark">Unknown</span>
                                        break;
                                }
                            </td>
                            <td style="text-align: center;" data-status="@row.Status">
                                @switch (row.Status)
                                {
                                    case 1:
                                        <span class="badge bg-success">Sent</span>
                                        break;
                                    case 2:
                                        <span class="badge bg-info">Responded</span>
                                        break;
                                    case 3:
                                        <span class="badge bg-info">Failed</span>
                                        break;
                                    default:
                                        <span class="badge bg-light text-dark">Unknown</span>
                                        break;
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Image Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="fullImage" src="" alt="Full Image" class="img-fluid">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- DataTables CSS -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/fixedheader/3.4.0/css/fixedHeader.bootstrap5.min.css">

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.4.0/js/dataTables.fixedHeader.min.js"></script>

    <script>
        var dataTable;

        $(document).ready(function () {
            dataTable = $('#datatable-fixed-header').DataTable({
                fixedHeader: true,
                orderCellsTop: true,
                responsive: false,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                scrollCollapse: true,
                scrollX: true,
                scrollY: '35vh',
                columnDefs: [
                    {
                        targets: 0,
                        searchable: false,
                        orderable: false,
                        width: '40px',
                        className: 'dt-body-center',
                    }
                ],
                order: [[1, 'desc']],
            });

            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        function reset() {
            $('#date_filter').val('');
            $('#downtime_filter').val('');
            $('#ticketnumber_filter').val('');
            $('#receiver_filter').val('');
            $('#text_filter').val('');
            $('#image_filter').val('');
            $('#type_filter').val('');
            $('#category_filter').val('');
            $('#level_filter').val('');
            $('#status_filter').val('');

            dataTable.search('').columns().search('').draw();
        }

        function search() {
            var date = $('#date_filter').val();
            var downtime = $('#downtime_filter').val();
            var ticketNumber = $('#ticketnumber_filter').val();
            var receiver = $('#receiver_filter').val();
            var text = $('#text_filter').val();
            var imageFilter = $('#image_filter').val();
            var typeFilter = $('#type_filter').val();
            var categoryFilter = $('#category_filter').val();
            var statusFilter = $('#status_filter').val();

            dataTable.columns().search('');

            if (date) {
                var formattedDate = new Date(date).toLocaleDateString('en-GB');
                dataTable.columns(1).search(formattedDate);
            }

            dataTable.columns(2).search(downtime);
            dataTable.columns(3).search(ticketNumber);
            dataTable.columns(4).search(receiver);
            dataTable.columns(5).search(text);
            
           
            $.fn.dataTable.ext.search.push(
                function (settings, data, dataIndex) {
                    var row = dataTable.row(dataIndex).node();
                    if (imageFilter && imageFilter === 'with_image') {
                        var typeData = $(row).find('td:eq(6)').attr('data-image');
                        if (typeData && typeData != '') {
                            return true;
                        }
                    } else if (imageFilter && imageFilter === 'without_image') {
                        var typeData = $(row).find('td:eq(6)').attr('data-image');
                        if (typeData && typeData != '') {
                            return false;
                        }
                    }
                    
                    if (typeFilter && typeFilter !== '') {
                        var typeData = $(row).find('td:eq(7)').attr('data-type');
                        if (typeData != typeFilter) {
                            return false;
                        }
                    }
                    
                    if (categoryFilter && categoryFilter !== '') {
                        var categoryData = $(row).find('td:eq(8)').attr('data-category');
                        if (categoryData != categoryFilter) {
                            return false;
                        }
                    }
                    
                    if (statusFilter && statusFilter !== '') {
                        var statusData = $(row).find('td:eq(9)').attr('data-status');
                        if (statusData != statusFilter) {
                            return false;
                        }
                    }
                    
                    return true;
                }
            );
            
            dataTable.draw();
            
            $.fn.dataTable.ext.search.pop();
        }

        function handleKeyPress(event) {
            if (event.key === "Enter") {
                search();
            }
        }


        function showImageModal(imageSrc) {
            $('#fullImage').attr('src', imageSrc);
            $('#imageModal').modal('show');
        }

        $(document).ready(function() {
            setTimeout(function() {
                $('.alert').fadeOut('slow');
            }, 5000);
        });
    </script>
}